#==========================================================================
# Description: Build Armbian For Amlogic s9xxx tv box
# Copyright (C) 2021 https://github.com/ophub/amlogic-s9xxx-armbian
#==========================================================================

name: Use Releases file to build armbian

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      sel_tags_keywords:
        description: "Release: jammy / focal / bullseye"
        required: true
        default: "jammy"
      armbian_soc:
        description: "Set Amlogic SoC."
        required: true
        default: "s905d"
      armbian_kernel:
        description: "Set kernel version."
        required: true
        default: "5.4.273"
      armbian_size:
        description: "Set armbian rootfs size(Unit: MiB)."
        required: true
        default: "2748"
      armbian_fstype:
        description: "Set armbian rootfs type: ext4 / btrfs"
        required: true
        default: "ext4"
      #set_board:
      #  description: "BOARD: lepotato / Odroidn2"
      #  required: true
      #  default: "Odroidn2"  

env:
  TZ: Asia/Shanghai
  UPLOAD_FIRMWARE: true
  BASE_KERNEL: 6.1.35
  SERVERCHAN_SCKEY: true
  ARMBIAN_VERSION: 24.05.0

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: telegrame_bot
        run: |
          ARR_RELEASE=("focal" "bullseye" "buster")
          set_release="${{ github.event.inputs.sel_tags_keywords }}"
          #if  [[ -z "${set_release}" || -z "$(echo "${ARR_RELEASE[@]}" | grep -w "${set_release}")" ]]; then
              #set_release="focal"
          #fi
          echo "ARMBIAN_RELEASE=${set_release}" >> $GITHUB_ENV

          ARR_BOARD=("lepotato" "odroidn2")
          set_board="${{ github.event.inputs.set_board }}"
          #if  [[ -z "${set_board}" || -z "$(echo "${ARR_BOARD[@]}" | grep -w "${set_board}")" ]]; then
              #set_board="lepotato"
          #fi
          echo "ARMBIAN_BOARD=${set_board}" >> $GITHUB_ENV    

          set_kernel="${{ github.event.inputs.armbian_kernel }}"
          if [ "$set_kernel" = "none" ]; then
            echo "no kernel was chosen"
          else
            echo "ARMBIAN_KERNEL=${set_kernel}" >> $GITHUB_ENV
          fi

          if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
            curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=🎉 主人：
            您正在使用kissyouhunter仓库的Armbian_${{ env.ARMBIAN_VERSION }}-trunk_${{ github.event.inputs.set_board }}_${{ github.event.inputs.sel_tags_keywords }}_current_${{ github.event.inputs.armbian_kernel }}编译您自己的固件,请耐心等待...... 😋" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
          fi 

      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install -y $(curl -fsSL https://is.gd/depend_ubuntu2204_armbian)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          echo "COMPILE_STARTINGTIME=$(date +"%m.%d.%H%M")" >> $GITHUB_ENV

      - name: Download Armbian from Releases & Rebuild Armbian for Amlogic s9xxx
        id: rebuild
        if: (!cancelled())
        run: |
          armbian_buildpath="build/output/images"
          [ -d "${armbian_buildpath}" ] || mkdir -p "${armbian_buildpath}"
          cd "${armbian_buildpath}" && curl -# -LO https://github.com/kissyouhunter/amlogic-armbian/releases/download/Armbian/Armbian_${{ env.ARMBIAN_VERSION }}-trunk_${{ env.ARMBIAN_BOARD }}_${{ env.ARMBIAN_RELEASE }}_current_${{ env.BASE_KERNEL }}.img.gz
          gzip -df *.img.gz && sync
          cd ${GITHUB_WORKSPACE}
          sudo chmod +x build-armbian/common-files/rootfs/usr/sbin/*
          sudo chmod +x rebuild
          sudo ./rebuild -d -b s905d -k ${{ env.ARMBIAN_KERNEL }}
          cd build/output/images/ && ls -a && sudo rm -f Armbian_${{ env.ARMBIAN_VERSION }}-trunk_${{ env.ARMBIAN_BOARD }}_${{ env.ARMBIAN_RELEASE }}_current_${{ env.BASE_KERNEL }}.img sha256sums && ls && sync
          sudo chmod 777 *.img.gz
          echo "ARMBIAN_N1_NAME=$(ls)" >> $GITHUB_ENV
          echo "FILEPATH=$PWD" >> $GITHUB_ENV
          echo "FILE_DATE=$(date +"%m.%d.%H%M")" >> $GITHUB_ENV
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Upload Armbian image to Actions
        uses: actions/upload-artifact@master
        if: steps.rebuild.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        with:
          name: ${{ env.ARMBIAN_N1_NAME }}
          path: ${{ env.FILEPATH }}/

      - name: telegram_bot
        run: |
          if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
            curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=我亲爱的✨主人✨：
            您使用kissyouhunter仓库的 Armbian_${{ env.ARMBIAN_VERSION }}-trunk_${{ env.ARMBIAN_BOARD }}_${{ env.ARMBIAN_RELEASE }}_current_${{ env.ARMBIAN_KERNEL }}固件顺利编译完成了！💐" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
          fi          
