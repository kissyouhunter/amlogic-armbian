#==========================================================================
# Description: Build Armbian For Amlogic s9xxx tv box
# Copyright (C) 2021 https://github.com/ophub/amlogic-s9xxx-armbian
#==========================================================================

name: Rebuild armbian

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      armbian_url:
        description: "Set armbian path."
        required: false
        default: ""
      armbian_soc:
        description: "Set Amlogic SoC."
        required: false
        default: "s905x3_s905d"
      armbian_kernel:
        description: "Set kernel version."
        required: false
        default: "5.15.25_5.10.100"
      armbian_size:
        description: "Set armbian rootfs size(Unit: MiB)."
        required: false
        default: "2748"
      armbian_fstype:
        description: "Set armbian rootfs type: ext4 / btrfs"
        required: false
        default: "ext4"

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install -y $(curl -fsSL https://is.gd/depend_ubuntu2204_armbian)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

          # Get the url of the rebuild armbian file
          armbian_url="${{ github.event.inputs.armbian_url }}"
          if  [[ -z "${armbian_url}" ]]; then
              armbian_site="https://armbian.tnahosting.net/dl/odroidn2/archive/"
              armbian_name="Armbian.*jammy.*.img.xz"
              armbian_file=$(curl -s "${armbian_site}" | grep -oE "${armbian_name}" | head -n 1)
              if [ -n "${armbian_file}" ]; then
                  armbian_url="${armbian_site}${armbian_file}"
              else
                  echo -e "Invalid download path: [ ${armbian_site} ]"
                  exit 1
              fi
          fi
          echo "ARMBIAN_URL=${armbian_url}" >> $GITHUB_ENV
          echo "COMPILE_STARTINGTIME=$(date +"%m.%d.%H%M")" >> $GITHUB_ENV

          # Get the release name of the rebuild armbian file
          set_release="_"
          ARR_RELEASE=("jammy" "focal" "bullseye")
          i=1
          for r in ${ARR_RELEASE[*]}; do
              if [[ "${armbian_url}" == *"${r}"* ]]; then
                  set_release="_${r}_"
                  break
              fi
              let i++
          done
          echo "ARMBIAN_RELEASE=${set_release}" >> $GITHUB_ENV

      - name: Rebuild Armbian for Amlogic s9xxx
        uses: ophub/amlogic-s9xxx-armbian@main
        if: env.ARMBIAN_URL != '' && !cancelled()
        with:
          armbian_path: ${{ env.ARMBIAN_URL }}
          armbian_soc: ${{ github.event.inputs.armbian_soc }}
          armbian_kernel: ${{ github.event.inputs.armbian_kernel }}
          armbian_size: ${{ github.event.inputs.armbian_size }}
          armbian_fstype: ${{ github.event.inputs.armbian_fstype }}

      - name: Upload Armbian image to Release
        uses: ncipollo/release-action@main
        if: env.PACKAGED_STATUS == 'success' && !cancelled()
        with:
          tag: Armbian_Aml${{ env.ARMBIAN_RELEASE }}${{ env.PACKAGED_OUTPUTDATE }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            This is Armbian image for Amlogic s9xxx tv box
            * Firmware information
            Default username: root
            Default password: 1234
            Install to EMMC command: armbian-install
            Update command: armbian-update
