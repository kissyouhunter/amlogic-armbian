#==========================================================================
# Description: Build Armbian For Amlogic s9xxx tv box
# Copyright (C) 2021 https://github.com/ophub/amlogic-s9xxx-armbian
#==========================================================================

name: Build armbian

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      set_release:
        description: "RELEASE: bullseye / focal"
        required: false
        default: "focal"
      set_board:
        description: "BOARD: lepotato / odroidn2"
        required: false
        default: "odroidn2"
      set_kernel:
        description: "KERNEL: 5.4.y / 5.10.y / 5.15.y"
        required: false
        default: "none"        
      set_opts:
        description: "More build options: for compile.sh"
        required: false
        default: ""
  #schedule:
    #- cron: "0 17 * * 0"

env:
  TZ: Asia/Shanghai
  UPLOAD_FIRMWARE: true
  SERVERCHAN_SCKEY: true

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: choose kernel
        run: |
          ARR_RELEASE=("focal" "bullseye" "buster")
          set_release="${{ github.event.inputs.set_release }}"
          if  [[ -z "${set_release}" || -z "$(echo "${ARR_RELEASE[@]}" | grep -w "${set_release}")" ]]; then
              set_release="focal"
          fi
          echo "ARMBIAN_RELEASE=${set_release}" >> $GITHUB_ENV
          
          ARR_BOARD=("lepotato" "odroidn2")
          set_board="${{ github.event.inputs.set_board }}"
          if  [[ -z "${set_board}" || -z "$(echo "${ARR_BOARD[@]}" | grep -w "${set_board}")" ]]; then
              set_board="lepotato"
          fi
          echo "ARMBIAN_BOARD=${set_board}" >> $GITHUB_ENV         

          set_kernel="${{ github.event.inputs.set_kernel }}"
          if [ "$set_kernel" = "none" ]; then
            echo "no kernel was chosen"
          else
            echo "ARMBIAN_KERNEL=${set_kernel}" >> $GITHUB_ENV
          fi

      - name: telegrame_bot
        run: |
          if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
            curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=🎉 主人：
            您正在使用kissyouhunter仓库的 Armbian ${{ env.ARMBIAN_BOARD }} ${{ env.ARMBIAN_RELEASE }} ${{ env.ARMBIAN_KERNEL }} for N1 编译您自己的固件,请耐心等待...... 😋" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
          fi           

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/ubuntu-2004-server)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          echo "COMPILE_STARTINGTIME=$(date +"%Y.%m.%d.%H%M")" >> $GITHUB_ENV
          echo "ARMBIAN_MORE_OPTS=${{ github.event.inputs.set_opts }}" >> $GITHUB_ENV

      - name: Download source code
        id: down
        run: |
          git clone --depth 1 https://github.com/armbian/build.git

      - name: Compile Armbian [ ${{ env.ARMBIAN_BOARD }} ]
        id: compile
        run: |
          cd build/
          sudo chmod +x compile.sh
          sudo ./compile.sh BOARD=${{ env.ARMBIAN_BOARD }} RELEASE=${{ env.ARMBIAN_RELEASE }} BRANCH=current \
                            BUILD_MINIMAL=no BUILD_DESKTOP=no HOST=armbian KERNEL_ONLY=no KERNEL_CONFIGURE=no \
                            CLEAN_LEVEL=make,debs COMPRESS_OUTPUTIMAGE=sha,img ${{ env.ARMBIAN_MORE_OPTS }}
          echo "::set-output name=status::success"

      - name: Rebuild Armbian for amlogic s9xxx
        id: rebuild
        if: steps.compile.outputs.status == 'success' && !cancelled()
        run: |
          sudo chmod +x build-armbian/common-files/files/usr/sbin/*
          sudo chmod +x rebuild
          if [ "$set_kernel" = "none" ]; then
            echo "no kernel was chosen"
          else
            sudo ./rebuild -d -b s905d -k ${{ env.ARMBIAN_KERNEL }}
          fi
          cd build/output/images/ && sudo gzip *.img && sync
          echo "FILEPATH=$PWD" >> $GITHUB_ENV
          echo "FILE_DATE=$(date +"%Y.%m.%d.%H%M")" >> $GITHUB_ENV
          echo "::set-output name=status::success"

      - name: Upload Armbian image to Actions
        uses: kittaakos/upload-artifact-as-is@master
        if: steps.rebuild.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        with:
          path: ${{ env.FILEPATH }}/

      - name: telegram_bot
        run: |
          if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
            curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=我亲爱的✨主人✨：
            您使用kissyouhunter仓库的 Armbian ${{ env.ARMBIAN_BOARD }} ${{ env.ARMBIAN_RELEASE }} ${{ env.ARMBIAN_KERNEL }} for N1 固件顺利编译完成了！💐" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
          fi
